# Name To identify to status host as
clientName: "changeMe"

# Enable and set hosts address/port if using the status server
isStatusClient: true
statusHostAddr: "127.0.0.1"
statusHostPort: 10152
sendDiskInfo: true

# Enable and set address/port to operate as a nut client for shutdowns
isNUTClient: true
nutHostAddr: "192.168.1.165"
nutHostPort: 3493
nutUser: "admin"
nutPass: "powerpass"
nutDevice: "eaton" # Name of the nut device to monitor
nutPollFreq: 20 # How often to poll the nut server in seconds
nutPctString: "battery.charge" # Variable string for battery charge percentage from nut
nutRuntimeString: "battery.runtime" # Variable string for battery runtime left from nt

# Will enable shutdown, if isNUTClient = true will monitor NUT endpoint and shutdown at threshold
# If is NUTClient = false and isStatusClient, statusHost will use relay from statusHost for shutdown
# If disabled, will not run NUT even if set to true and will not be shutdown by status host either
doShutDown: true
shutdownCommand: "/shutdown now" # String that will be executed for shutdown, may need to alter privileges for program to be able to successfully call

# Status host will attempt to send wake on lan packet after threshold if doShutDown = true;
doWakeOnLan: true

# Will print status updates to terminal as well as relay them if isStatusClient = true
printStatusOut: false
printFreq: 5 # How offten to print to terminal if enabled

# If isShutDownPct = true, will use threshold as a percentage of battery level, if false will use threshold as seconds left on runtime
isShutDownPct: true
shutDownThreshold: 50

# Wakeup threshold is always a percentage and should be between 0-100
wakeUpThreshold: 80
